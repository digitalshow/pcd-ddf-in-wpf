//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Koinzer.pcdddfinwpf {
	using System;
	
	
	/// <summary>
	///   A strongly-typed resource class, for looking up localized strings, etc.
	/// </summary>
	// This class was auto-generated by the StronglyTypedResourceBuilder
	// class via a tool like ResGen or Visual Studio.
	// To add or remove a member, edit your .ResX file then rerun ResGen
	// with the /str option, or rebuild your VS project.
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	internal class CodeRessource {
		
		private static global::System.Resources.ResourceManager resourceMan;
		
		private static global::System.Globalization.CultureInfo resourceCulture;
		
		[global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
		internal CodeRessource() {
		}
		
		/// <summary>
		///   Returns the cached ResourceManager instance used by this class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal static global::System.Resources.ResourceManager ResourceManager {
			get {
				if (object.ReferenceEquals(resourceMan, null)) {
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Koinzer.pcdddfinwpf.CodeRessource", typeof(CodeRessource).Assembly);
					resourceMan = temp;
				}
				return resourceMan;
			}
		}
		
		/// <summary>
		///   Overrides the current thread's CurrentUICulture property for all
		///   resource lookups using this strongly typed resource class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal static global::System.Globalization.CultureInfo Culture {
			get {
				return resourceCulture;
			}
			set {
				resourceCulture = value;
			}
		}
		
		/// <summary>
		///   Looks up a localized string similar to var
		///  phi,r,x,y:Double;
		///  pan, tilt, panfine, tiltfine:Double;
		///begin
		///  if usemhcontrol.checked then
		///  begin
		///    // Moving-Head-Steuerung (Polarkoordinaten)
		///    x:=((PositionXY.Left+(PositionXY.Width div 2)-(fadenkreuz.Width/2))/fadenkreuz.Width)*2;	//-1..0..1
		///    y:=((PositionXY.Top+(PositionXY.Height div 2)-(fadenkreuz.Width/2))/fadenkreuz.Height)*2;	//-1..0..1
		///    r:=sqrt(x*x+y*y);
		///
		///    if (r&gt;0) then
		///    begin
		///      if (y&gt;=0) then
		///        phi:=arccos(x/r)
		///      else
		///        phi:=6.28318530 [rest of string was truncated]&quot;;.
		/// </summary>
		internal static string PositionXYChange {
			get {
				return ResourceManager.GetString("PositionXYChange", resourceCulture);
			}
		}
		
		/// <summary>
		///   Looks up a localized string similar to         if usemhcontrol.checked then
		///        begin
		///          // Moving-Head-Steuerung
		///          temp:=get_channel(&apos;tilt&apos;)+(get_channel(&apos;tiltfine&apos;)/256);
		///          case round(temp) of
		///            0..127: r:=((127-temp)/127);
		///            128..255: r:=((temp-128)/127);
		///          end;
		///          phi:=(get_channel(&apos;pan&apos;)+(get_channel(&apos;panfine&apos;)/256))/255*6.283185307179586476925286766559;	//(X/255)*PI
		///          PositionXY.Left:=round(r*sin(phi)*(Fadenkreuz.Width/2)+(Fadenkreuz.Width/2)-(PositionXY.Width d [rest of string was truncated]&quot;;.
		/// </summary>
		internal static string PositionXYUpdate {
			get {
				return ResourceManager.GetString("PositionXYUpdate", resourceCulture);
			}
		}
	}
}
